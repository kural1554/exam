# Generated by Django 5.2.6 on 2025-09-19 17:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exams', '0001_initial'),
        ('results', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='examresult',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.exam'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='exam_result',
            field=models.OneToOneField(blank=True, help_text='Link to the specific exam attempt.', null=True, on_delete=django.db.models.deletion.CASCADE, to='results.examresult'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentanswer',
            name='exam_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='results.examresult'),
        ),
        migrations.AddField(
            model_name='studentanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.question'),
        ),
        migrations.AddField(
            model_name='studentanswer',
            name='selected_option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exams.option'),
        ),
        migrations.AlterUniqueTogether(
            name='feedback',
            unique_together={('student', 'exam_result')},
        ),
    ]
